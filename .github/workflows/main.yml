name: CI/CD

on:
  push:
    branches:
      - main

env:
  maven_packages_cache: ".m2/repository"
  MAVEN_OPTS: "-Dmaven.repo.local=./$maven_packages_cache"

jobs:
  build:
    runs-on: self-hosted
    container:
      image: maven:3.8.5-openjdk-17
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: mvn compile
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-artifacts
          path: target/*
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

  test:
    runs-on: self-hosted
    container:
      image: maven:3.8.5-openjdk-17
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: mvn test
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

      - name: Archive test reports
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-test-reports
          path: target/surefire-reports/*
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

      - name: Archive code coverage
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-coverage
          path: target/site/jacoco/*
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

  analyze:
    runs-on: self-hosted
    container:
      image: maven:3.8.5-openjdk-17
    needs:
      - build
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Analyze
        run: mvn sonar:sonar -Dsonar.projectKey=game2048 -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=$sonar_login -Dsonar.qualitygate.wait=true
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}
    continue-on-error: true

  package:
    runs-on: self-hosted
    container:
      image: maven:3.8.5-openjdk-17
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Package
        run: mvn package
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-artifacts
          path: target/*.war
        env:
          MAVEN_OPTS: ${{ env.MAVEN_OPTS }}

  deploy_deploy:
    runs-on: self-hosted
    needs: package
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Remove Tomcat
        run: docker rm --force tomcat

      - name: Remove game2048 image
        run: docker image rm --force game2048

      - name: Build and run game2048 image
        run: |
          echo -e 'FROM tomcat:9-jdk17-openjdk-slim \n COPY ./target/game2048.war /usr/local/tomcat/webapps' | docker build -t game2048 -f- .
          docker run --rm -d --name tomcat -p 8080:8080 game2048
    env:
      url: http://localhost:8080/game2048
    outputs:
      url: ${{ env.url }}

